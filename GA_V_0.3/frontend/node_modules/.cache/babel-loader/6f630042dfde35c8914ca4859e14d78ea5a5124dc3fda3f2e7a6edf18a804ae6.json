{"ast":null,"code":"var _jsxFileName = \"/home/mass2070/Galaxia_Arkada/GA_V_0.3/frontend/src/context/GameContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // Utilisé pour rediriger si besoin\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameContext = /*#__PURE__*/createContext();\nexport const GameProvider = ({\n  children\n}) => {\n  _s();\n  const [games, setGames] = useState([]);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Fonction pour soumettre un jeu\n  const submitGame = async gameData => {\n    const token = sessionStorage.getItem(\"token\"); // On récupère le token d'authentification\n    if (!token) {\n      console.log(\"Aucun token trouvé, utilisateur non connecté.\");\n      setError(\"Veuillez vous connecter pour soumettre un jeu.\");\n      navigate(\"/login\"); // Redirige vers la page de connexion si aucun token\n      return;\n    }\n    try {\n      setError(\"\"); // Réinitialise l'erreur avant chaque tentative\n      console.log(\"FormData prêt à être envoyé :\", gameData);\n      const response = await axios.post(\"http://localhost:3000/api/Game/submit\", gameData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"Réponse du serveur pour la soumission du jeu :\", response.data);\n      setGames(prevGames => [...prevGames, response.data]); // Mise à jour de la liste des jeux avec le nouveau jeu\n    } catch (err) {\n      if (err.response && err.response.status === 401) {\n        setError(\"Non autorisé : veuillez vérifier votre connexion.\");\n        navigate(\"/login\"); // Redirige si l'utilisateur n'est pas autorisé\n      } else if (err.response) {\n        console.error(\"Erreur de l'API :\", err.response.data.message);\n        setError(\"Erreur : \" + err.response.data.message);\n      } else {\n        console.error(\"Erreur réseau :\", err.message);\n        setError(\"Une erreur réseau est survenue. Veuillez réessayer.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GameContext.Provider, {\n    value: {\n      games,\n      submitGame,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(GameProvider, \"ondh8IetkJGdcJIiRB0pIB3/dIE=\", false, function () {\n  return [useNavigate];\n});\n_c = GameProvider;\nexport const useGame = () => {\n  _s2();\n  return React.useContext(GameContext);\n};\n_s2(useGame, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GameProvider\");","map":{"version":3,"names":["React","createContext","useState","axios","useNavigate","jsxDEV","_jsxDEV","GameContext","GameProvider","children","_s","games","setGames","error","setError","navigate","submitGame","gameData","token","sessionStorage","getItem","console","log","response","post","headers","Authorization","data","prevGames","err","status","message","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGame","_s2","useContext","$RefreshReg$"],"sources":["/home/mass2070/Galaxia_Arkada/GA_V_0.3/frontend/src/context/GameContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\"; // Utilisé pour rediriger si besoin\n\nconst GameContext = createContext();\n\nexport const GameProvider = ({ children }) => {\n  const [games, setGames] = useState([]);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Fonction pour soumettre un jeu\n  const submitGame = async (gameData) => {\n    const token = sessionStorage.getItem(\"token\"); // On récupère le token d'authentification\n    if (!token) {\n      console.log(\"Aucun token trouvé, utilisateur non connecté.\");\n      setError(\"Veuillez vous connecter pour soumettre un jeu.\");\n      navigate(\"/login\"); // Redirige vers la page de connexion si aucun token\n      return;\n    }\n\n    try {\n      setError(\"\"); // Réinitialise l'erreur avant chaque tentative\n      console.log(\"FormData prêt à être envoyé :\", gameData);\n\n      const response = await axios.post(\"http://localhost:3000/api/Game/submit\", gameData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"multipart/form-data\"\n        },\n      });\n\n      console.log(\"Réponse du serveur pour la soumission du jeu :\", response.data);\n      setGames((prevGames) => [...prevGames, response.data]); // Mise à jour de la liste des jeux avec le nouveau jeu\n    } catch (err) {\n      if (err.response && err.response.status === 401) {\n        setError(\"Non autorisé : veuillez vérifier votre connexion.\");\n        navigate(\"/login\"); // Redirige si l'utilisateur n'est pas autorisé\n      } else if (err.response) {\n        console.error(\"Erreur de l'API :\", err.response.data.message);\n        setError(\"Erreur : \" + err.response.data.message);\n      } else {\n        console.error(\"Erreur réseau :\", err.message);\n        setError(\"Une erreur réseau est survenue. Veuillez réessayer.\");\n      }\n    }\n  };\n\n  return (\n    <GameContext.Provider value={{ games, submitGame, error }}>\n      {children}\n    </GameContext.Provider>\n  );\n};\n\nexport const useGame = () => React.useContext(GameContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AACtD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMY,UAAU,GAAG,MAAOC,QAAQ,IAAK;IACrC,MAAMC,KAAK,GAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC/C,IAAI,CAACF,KAAK,EAAE;MACVG,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC;MAC5DR,QAAQ,CAAC,gDAAgD,CAAC;MAC1DC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACpB;IACF;IAEA,IAAI;MACFD,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;MACdO,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEL,QAAQ,CAAC;MAEtD,MAAMM,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,uCAAuC,EAAEP,QAAQ,EAAE;QACnFQ,OAAO,EAAE;UACPC,aAAa,EAAE,UAAUR,KAAK,EAAE;UAChC,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEFG,OAAO,CAACC,GAAG,CAAC,gDAAgD,EAAEC,QAAQ,CAACI,IAAI,CAAC;MAC5Ef,QAAQ,CAAEgB,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEL,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZ,IAAIA,GAAG,CAACN,QAAQ,IAAIM,GAAG,CAACN,QAAQ,CAACO,MAAM,KAAK,GAAG,EAAE;QAC/ChB,QAAQ,CAAC,mDAAmD,CAAC;QAC7DC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;MACtB,CAAC,MAAM,IAAIc,GAAG,CAACN,QAAQ,EAAE;QACvBF,OAAO,CAACR,KAAK,CAAC,mBAAmB,EAAEgB,GAAG,CAACN,QAAQ,CAACI,IAAI,CAACI,OAAO,CAAC;QAC7DjB,QAAQ,CAAC,WAAW,GAAGe,GAAG,CAACN,QAAQ,CAACI,IAAI,CAACI,OAAO,CAAC;MACnD,CAAC,MAAM;QACLV,OAAO,CAACR,KAAK,CAAC,iBAAiB,EAAEgB,GAAG,CAACE,OAAO,CAAC;QAC7CjB,QAAQ,CAAC,qDAAqD,CAAC;MACjE;IACF;EACF,CAAC;EAED,oBACER,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACC,KAAK,EAAE;MAAEtB,KAAK;MAAEK,UAAU;MAAEH;IAAM,CAAE;IAAAJ,QAAA,EACvDA;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC3B,EAAA,CA/CWF,YAAY;EAAA,QAGNJ,WAAW;AAAA;AAAAkC,EAAA,GAHjB9B,YAAY;AAiDzB,OAAO,MAAM+B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMxC,KAAK,CAACyC,UAAU,CAAClC,WAAW,CAAC;AAAA;AAACiC,GAAA,CAA9CD,OAAO;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}