{"ast":null,"code":"var _jsxFileName = \"/home/mass2070/Galaxia_Arkada/GA_V_0.2.5/frontend/src/Page/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(\"\");\n  const login = async (Email, password) => {\n    console.log(\"Tentative de connexion avec\", {\n      Email,\n      password\n    }); // Débogage 1\n\n    // Vérification si l'Email ou le mot de passe est manquant\n    if (!Email || !password) {\n      console.error(\"Email ou mot de passe manquant.\"); // Débogage supplémentaire\n      setError(\"Veuillez entrer un email et un mot de passe.\");\n      return;\n    }\n    try {\n      const response = await fetch(\"http://localhost:3000/api/users/signin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email: Email,\n          password: password\n        })\n      });\n      console.log(\"Réponse du serveur :\", response); // Débogage 2\n\n      const data = await response.json();\n      console.log(\"Données reçues du serveur :\", data); // Débogage 3\n\n      if (!response.ok) {\n        console.error(\"Erreur de réponse du serveur :\", data.message); // Débogage 4\n        setError(data.message || \"Erreur de connexion\");\n        return;\n      }\n      if (data.success) {\n        console.log(\"Connexion réussie, utilisateur :\", data.user); // Débogage 5\n        setUser(data.user); // Assurez-vous que l'API renvoie l'utilisateur\n      } else {\n        console.warn(\"Nom d'utilisateur ou mot de passe incorrect.\"); // Débogage 6\n        setError(\"Nom d'utilisateur ou mot de passe incorrect.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur de connexion :\", error); // Débogage 7\n      setError(error.message);\n    }\n  };\n  const logout = () => {\n    console.log(\"Déconnexion de l'utilisateur :\", user); // Débogage 8\n    setUser(null); // Déconnexion\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"aLtBmhcTZ6Pg/73X5ygmhbR8Yp4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  console.log(\"Utilisation de useAuth\"); // Débogage 9\n  return React.useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","error","setError","login","Email","password","console","log","response","fetch","method","headers","body","JSON","stringify","email","data","json","ok","message","success","warn","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","useContext","$RefreshReg$"],"sources":["/home/mass2070/Galaxia_Arkada/GA_V_0.2.5/frontend/src/Page/AuthContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const login = async (Email, password) => {\n    console.log(\"Tentative de connexion avec\", { Email, password }); // Débogage 1\n\n    // Vérification si l'Email ou le mot de passe est manquant\n    if (!Email || !password) {\n      console.error(\"Email ou mot de passe manquant.\"); // Débogage supplémentaire\n      setError(\"Veuillez entrer un email et un mot de passe.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\"http://localhost:3000/api/users/signin\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email: Email, password: password }),\n      });\n\n      console.log(\"Réponse du serveur :\", response); // Débogage 2\n\n      const data = await response.json();\n      console.log(\"Données reçues du serveur :\", data); // Débogage 3\n\n      if (!response.ok) {\n        console.error(\"Erreur de réponse du serveur :\", data.message); // Débogage 4\n        setError(data.message || \"Erreur de connexion\");\n        return;\n      }\n\n      if (data.success) {\n        console.log(\"Connexion réussie, utilisateur :\", data.user); // Débogage 5\n        setUser(data.user); // Assurez-vous que l'API renvoie l'utilisateur\n      } else {\n        console.warn(\"Nom d'utilisateur ou mot de passe incorrect.\"); // Débogage 6\n        setError(\"Nom d'utilisateur ou mot de passe incorrect.\");\n      }\n    } catch (error) {\n      console.error(\"Erreur de connexion :\", error); // Débogage 7\n      setError(error.message);\n    }\n  };\n\n  const logout = () => {\n    console.log(\"Déconnexion de l'utilisateur :\", user); // Débogage 8\n    setUser(null); // Déconnexion\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, error }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  console.log(\"Utilisation de useAuth\"); // Débogage 9\n  return React.useContext(AuthContext);\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}