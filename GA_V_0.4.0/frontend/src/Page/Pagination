import styled from 'styled-components';

const PaginationContainer = styled.div`
  display: flex;
  justify-content: center;
  margin-top: 20px;
`;

const PageButton = styled.button<{ active?: boolean }>`
  margin: 0 5px;
  padding: 8px 12px;
  background-color: ${({ active }) => (active ? '#007bff' : '#ffffff')};
  color: ${({ active }) => (active ? '#ffffff' : '#007bff')};
  border: 1px solid #007bff;
  cursor: pointer;
  &:disabled {
    background-color: #e0e0e0;
    color: #888888;
    cursor: not-allowed;
  }
`;

const Pagination: React.FC<PaginationProps> = ({ currentPage, totalPages, onPageChange }) => {
  const handlePrevious = () => {
    if (currentPage > 1) {
      onPageChange(currentPage - 1);
    }
  };

  const handleNext = () => {
    if (currentPage < totalPages) {
      onPageChange(currentPage + 1);
    }
  };

  return (
    <PaginationContainer>
      <PageButton onClick={handlePrevious} disabled={currentPage === 1}>
        Précédent
      </PageButton>
      {Array.from({ length: totalPages }, (_, index) => (
        <PageButton
          key={index}
          active={currentPage === index + 1}
          onClick={() => onPageChange(index + 1)}
        >
          {index + 1}
        </PageButton>
      ))}
      <PageButton onClick={handleNext} disabled={currentPage === totalPages}>
        Suivant
      </PageButton>
    </PaginationContainer>
  );
};

export default Pagination;
